/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package agricola.modules;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import com.google.common.collect.ImmutableList;
import com.google.inject.AbstractModule;
import com.google.inject.TypeLiteral;

import agricola.BuildCost;
import agricola.DeckSet;
import agricola.majorimprovements.Fireplace;
import agricola.majorimprovements.MajorImprovement;
import agricola.minorimprovements.MinorImprovement;
import agricola.minorimprovements.MinorImprovementList;
import agricola.occupations.Occupation;
import agricola.occupations.OccupationList;

public class CardSetModule extends AbstractModule {

    private List<DeckSet> includedDeckSets;
    private int playerCount;

    private List<Occupation> occupations;
    private List<MajorImprovement> majorImprovements;
    private List<MinorImprovement> minorImprovements;

    public CardSetModule(int playerCount, List<DeckSet> includedDecks) {
        this.playerCount = playerCount;
        this.includedDeckSets = includedDecks;

        occupations = new ArrayList<Occupation>();
        majorImprovements = new ArrayList<MajorImprovement>();
        minorImprovements = new ArrayList<MinorImprovement>();

        for (DeckSet deck : includedDecks) {
            this.minorImprovements.addAll(MinorImprovementList.getMinorImprovementDeck(deck)
                    .stream()
                    .filter(mi -> mi.minimumPlayerCount() <= this.playerCount)
                    .collect(Collectors.toList()));

            this.occupations.addAll(OccupationList.getDeckOccupations(deck)
                    .stream()
                    .filter(occupation -> occupation.minimumPlayerCount() <= this.playerCount)
                    .collect(Collectors.toList()));
        }

        majorImprovements = ImmutableList.of(
            new Fireplace(new BuildCost().setClayCost(2)),
            new Fireplace(new BuildCost().setClayCost(3)));
        //TODO: Finish this list.
    }

    @Override
    public void configure() {
        bind(new TypeLiteral<List<Occupation>>(){}).toInstance(this.occupations);
        bind(new TypeLiteral<List<MajorImprovement>>(){}).toInstance(this.majorImprovements);
        bind(new TypeLiteral<List<MinorImprovement>>(){}).toInstance(this.minorImprovements);
    }
}
